/*
 * Copyright (c) 2021-2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

#define QWE_L 0
#define NUM_L 1
#define SYM_L 2
#define NAV_L 3
#define FN_L  4

#define A_C_D LA(LC(DEL))
#define U_RDO LS(LG(Z))

#include "macros.dtsi"
#include "hillside46.combos.dtsi"

&mt {
    tapping-term-ms = <175>;
};

&caps_word {
    continue-list = <UNDERSCORE MINUS BSPC DEL N1 N2 N3 N4 N5 N6 N7 N8 N9 N0>;
};

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <175>;
            quick-tap-ms = <100>;
            global-quick-tap;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
        td_esc: tap_dance_esc {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_ESC";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp GRAVE>, <&kp ESC>, <&kp ESC>;
        };
        bspc_del: backspace_delete {
            compatible = "zmk,behavior-mod-morph";
            label = "BACKSPACE_DELETE";
            #binding-cells = <0>;
            bindings = <&kp BACKSPACE>, <&kp DELETE>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            keep-mods = <(MOD_RSFT)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp TAB    &hm LGUI Q   &kp W  &kp E  &kp R  &kp T                &kp Y  &kp U  &kp I      &kp O    &kp P           &hm LALT BSLH
&kp BSPC   &kp A        &kp S  &kp D  &kp F  &kp G                &kp H  &kp J  &kp K      &kp L    &kp SEMI        &kp SQT
&kp LSHFT  &hm LCTRL Z  &kp X  &kp C  &kp V  &kp B  &none  &none  &kp N  &kp M  &kp COMMA  &kp DOT  &hm RCTRL FSLH  &mt RSHFT RET

&none  &lt NAV_L ESC  &kp RET  &lt FN_L TAB  &lt NUM_L BSPC  &kp SPACE  &lt SYM_L DEL  &none
            >;
        };

        num_layer {
            bindings = <
&none     &kp KP_DIVIDE    &kp KP_N7  &kp KP_N8  &kp KP_N9  &kp KP_MINUS                  &none  &none      &none  &none  &none  &none
&kp BSPC  &kp KP_MULTIPLY  &kp KP_N4  &kp KP_N5  &kp KP_N6  &kp KP_PLUS                   &none  &kp RSHFT  &none  &none  &none  &none
&kp DEL   &kp KP_N0        &kp KP_N1  &kp KP_N2  &kp KP_N3  &kp KP_EQUAL  &none   &none   &none  &none      &none  &none  &none  &none

&none  &kp DOT  &trans  &trans  &trans  &trans  &trans  &none
            >;
        };

        sym_layer {
            bindings = <
&kp LPAR  &kp RPAR  &kp AMPS  &kp ASTRK  &kp PIPE   &none                &none  &none  &none  &none  &none  &none
&kp LBKT  &kp RBKT  &kp DLLR  &kp PRCNT  &kp CARET  &none                &none  &none  &none  &none  &none  &none
&kp LBRC  &kp RBRC  &kp EXCL  &kp AT     &kp HASH   &none  &none  &none  &none  &none  &none  &none  &none  &none

&none  &trans  &trans  &trans  &trans  &trans  &trans  &none
            >;
        };

        nav_layer {
            bindings = <
&none      &none      &kp UP     &kp TAB    &kp LGUI   &kp LG(T)                &kp HOME   &kp PG_DN  &kp PG_UP  &kp END    &none      &kp PSCRN
&none      &kp LEFT   &kp DOWN   &kp RIGHT  &none      &none                    &kp LEFT   &kp DOWN   &kp UP     &kp RIGHT  &none      &kp A_C_D
&kp LSHFT  &kp LG(Z)  &kp LG(X)  &kp LG(C)  &kp LG(V)  &kp U_RDO  &none  &none  &kp LG(Z)  &kp LG(X)  &kp LG(C)  &kp LG(V)  &kp U_RDO  &kp RSHFT

&none  &trans  &trans  &trans  &trans  &trans  &trans  &none
            >;
        };

        fn_layer {
            bindings = <
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &none       &none                   &kp C_BRI_UP  &kp F7  &kp F8  &kp F9  &kp F12  &kp PSCRN
&none       &none         &none         &none         &none       &none                   &kp C_BRI_DN  &kp F4  &kp F5  &kp F6  &kp F11  &kp A_C_D
&kp K_MUTE  &kp C_VOL_DN  &kp C_VOL_UP  &kp C_PREV    &kp C_NEXT  &kp C_PP  &none  &none  &none         &kp F1  &kp F2  &kp F3  &kp F10  &none

&none  &trans  &trans  &trans  &trans  &trans  &trans  &none
            >;
        };

    };

};

